-- ==========================
-- D·ªãch v·ª• Roblox
-- ==========================
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local Player = Players.LocalPlayer
local Backpack = Player:WaitForChild("Backpack")
local DataFolder = Player:WaitForChild("Data")
local BeliStat = DataFolder:WaitForChild("Beli")
local FragStat = DataFolder:WaitForChild("Fragments")
local LevelStat = DataFolder:WaitForChild("Level")

-- ==========================
-- Load Turtle UI Lib
-- ==========================
local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/hviet2510/Noda-Test/main/modules/ui_lib.lua"))()
local win = lib:Window("Blox Fruits - Item Tracker")

-- ==========================
-- Bi·∫øn to√†n c·ª•c
-- ==========================
local WebhookURL = ""
local EmbedColor = 0x00ffcc
local OwnedItems = {}
local UpdateInterval = 5 -- ph√∫t
local LastAutoUpdate = tick()

-- ==========================
-- H√†m g·ª≠i Webhook
-- ==========================
local function SendDiscordEmbed(reason, itemName)
    if WebhookURL == "" then
        game.StarterGui:SetCore("SendNotification", {
            Title = "L·ªói",
            Text = "B·∫°n ch∆∞a nh·∫≠p Webhook URL!",
            Duration = 3
        })
        return
    end

    local beli = tostring(BeliStat.Value)
    local frags = tostring(FragStat.Value)
    local level = tostring(LevelStat.Value)

    local data = {
        username = "Blox Fruits Tracker",
        embeds = {{
            title = (reason == "item" and "+ V·∫≠t ph·∫©m m·ªõi nh·∫≠n!" or "+ C·∫≠p nh·∫≠t ƒë·ªãnh k·ª≥"),
            color = EmbedColor,
            fields = {
                { name = "Ng∆∞·ªùi ch∆°i", value = Player.Name, inline = true },
                { name = "Level hi·ªán t·∫°i", value = level, inline = true },
                { name = "Beli", value = beli, inline = true },
                { name = "Fragments", value = frags, inline = true },
                { name = "Th·ªùi gian", value = os.date("%H:%M:%S"), inline = true }
            },
            footer = { text = "Farm Tracker ‚Ä¢ " .. os.date("%d/%m/%Y") }
        }}
    }

    if reason == "item" and itemName then
        table.insert(data.embeds[1].fields, 2, { name = "V·∫≠t ph·∫©m", value = itemName, inline = true })
    end

    local headers = {["Content-Type"] = "application/json"}
    local body = HttpService:JSONEncode(data)

    if syn and syn.request then
        syn.request({Url = WebhookURL, Method = "POST", Headers = headers, Body = body})
    elseif http_request then
        http_request({Url = WebhookURL, Method = "POST", Headers = headers, Body = body})
    elseif request then
        request({Url = WebhookURL, Method = "POST", Headers = headers, Body = body})
    else
        warn("Executor kh√¥ng h·ªó tr·ª£ HTTP requests!")
    end
end

-- ==========================
-- Ki·ªÉm tra item m·ªõi
-- ==========================
local function CheckNewItem(item)
    if not OwnedItems[item.Name] then
        OwnedItems[item.Name] = true
        SendDiscordEmbed("item", item.Name)
    end
end

for _, item in ipairs(Backpack:GetChildren()) do
    OwnedItems[item.Name] = true
end
Backpack.ChildAdded:Connect(CheckNewItem)
Player.CharacterAdded:Connect(function(char)
    char.ChildAdded:Connect(CheckNewItem)
end)

-- ==========================
-- C·∫≠p nh·∫≠t ƒë·ªãnh k·ª≥
-- ==========================
task.spawn(function()
    while task.wait(5) do
        if tick() - LastAutoUpdate >= (UpdateInterval * 60) then
            SendDiscordEmbed("auto")
            LastAutoUpdate = tick()
        end
    end
end)

-- ==========================
-- UI Turtle Lib
-- ==========================
win:Box("Discord Webhook URL", function(value, focusLost)
    if focusLost then
        WebhookURL = value
        game.StarterGui:SetCore("SendNotification", {
            Title = "Webhook ƒë√£ l∆∞u",
            Text = "Link Webhook: " .. value,
            Duration = 3
        })
    end
end)

win:Dropdown("Th·ªùi gian c·∫≠p nh·∫≠t t·ª± ƒë·ªông", {"5", "10", "20", "30", "60"}, function(value)
    UpdateInterval = tonumber(value)
    game.StarterGui:SetCore("SendNotification", {
        Title = "C·∫≠p nh·∫≠t th√†nh c√¥ng",
        Text = "T·ª± ƒë·ªông: " .. value .. " ph√∫t",
        Duration = 3
    })
end)

win:Button("Test Webhook", function()
    SendDiscordEmbed("item", "V·∫≠t ph·∫©m test (Ki·ªÉm tra webhook)")
    game.StarterGui:SetCore("SendNotification", {
        Title = "ƒêang g·ª≠i test...",
        Text = "Ki·ªÉm tra Discord c·ªßa b·∫°n!",
        Duration = 3
    })
end)

win:Label("‚Ä¢ G·ª≠i ƒë·ªãnh k·ª≥ theo ph√∫t ƒë√£ ch·ªçn")
win:Label("‚Ä¢ N·∫øu c√≥ v·∫≠t ph·∫©m m·ªõi, s·∫Ω g·ª≠i ngay")

-- ==========================
-- N√∫t Toggle b·∫≠t/t·∫Øt UI
-- ==========================
local toggleGui = Instance.new("ScreenGui", game.CoreGui)
toggleGui.Name = "ToggleUI"

local toggleBtn = Instance.new("TextButton", toggleGui)
toggleBtn.Size = UDim2.new(0, 80, 0, 40)
toggleBtn.Position = UDim2.new(0.9, 0, 0.05, 0)
toggleBtn.Text = "üìÇ UI"
toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleBtn.Font = Enum.Font.SourceSansBold
toggleBtn.TextSize = 18

toggleBtn.MouseButton1Click:Connect(function()
    lib:Hide() -- d√πng h√†m c√≥ s·∫µn trong ui_lib.lua
end)
